extends:
  - plugin:react/recommended
  - plugin:react-hooks/recommended
  - plugin:jsx-a11y/recommended
  - standard-react
  - standard-with-typescript
globals:
  MyGlobal: true
rules:
  comma-dangle: [error, only-multiline]
  curly: [error, all]
  jsx-quotes: [error, prefer-single]
  multiline-ternary: off
  no-mixed-operators:
    - error
    - groups:
        - ["&", "|", "^", "~", "<<", ">>", ">>>"]
        - ["==", "!=", "===", "!==", ">", ">=", "<", "<=", "in", "instanceof"]
  no-var: error
  no-void: off
  operator-linebreak: [error, after]
  react-hooks/exhaustive-deps: error
  sort-imports:
    - error
    - ignoreDeclarationSort: true # -> import/order
  yoda:
    - error
    - never
    - onlyEquality: true

  import/order:
    - error
    - alphabetize:
        order: asc

  jsx-a11y/anchor-is-valid:
    - error
    - components: [Link]
      specialLink: [hrefLeft, hrefRight]
      aspects: [invalidHref, preferButton]

  react/jsx-boolean-value: [error, never]
  react/jsx-closing-bracket-location: [error, line-aligned]
  react/jsx-closing-tag-location: error
  react/jsx-curly-spacing:
    - error
    - allowMultiline: true
      children: true
  react/jsx-first-prop-new-line:
    - error
    - multiline-multiprop
  react/jsx-indent:
    - error
    - 2
    - checkAttributes: true
      indentLogicalExpressions: true
  react/jsx-indent-props: [error, 2]
  react/jsx-max-props-per-line:
    - error
    - maximum: 1
      when: multiline
  react/jsx-no-bind:
    - error
    - ignoreDOMComponents: true
      ignoreRefs: true
  react/jsx-pascal-case: error
  react/jsx-sort-props: error
  react/self-closing-comp: error

overrides:
  - files: ['*.ts', '*.tsx']
    # extends:
      # - standard-with-typescript
    parserOptions:
      project: [./tsconfig.json]
    rules:
      comma-dangle: off
      react/prop-types: off

      '@typescript-eslint/comma-dangle': [error, only-multiline]
      '@typescript-eslint/keyword-spacing':
        - error
        - overrides:
            if: { after: false }
            for: { after: false }
            while: { after: false }
      '@typescript-eslint/no-redeclare': off
      '@typescript-eslint/no-non-null-assertion':
        - warn
      '@typescript-eslint/space-before-function-paren':
        - error
        - anonymous: never
          asyncArrow: always
          named: never
      '@typescript-eslint/strict-boolean-expressions':
        - error
        - allowString: false
          allowNumber: false
          allowNullableObject: true
          # allowNullableBoolean: false
          # allowNullableString: false
          # allowNullableNumber: false
          # allowAny: false
