# Partially forked from https://github.com/standard/eslint-config-standard-with-typescript

env:
  es2021: true
  node: true
extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:import/recommended
  - plugin:jsx-a11y/recommended
  - plugin:promise/recommended
globals:
  document: readonly
  navigator: readonly
  window: readonly
parserOptions:
  ecmaVersion: 2021
  sourceType: module
plugins:
  - import
  - jsx-a11y
  - node
  - promise
  - react
  - react-hooks
  - "@typescript-eslint"
settings:
  react:
    version: detect

rules:
  accessor-pairs: error
  array-bracket-spacing: error
  array-callback-return: [error, checkForEach: true]
  arrow-spacing: error
  block-spacing: error
  camelcase: error
  comma-style: error
  computed-property-spacing: error
  curly: [error, all]
  default-case: error
  default-case-last: error
  default-param-last: error
  dot-location: [error, property]
  dot-notation: [error, allowKeywords: true]
  eol-last: error
  eqeqeq: [error, always, null: ignore]
  generator-star-spacing: error
  handle-callback-err: [error, "^(err|error)$"]
  key-spacing: error
  multiline-ternary: off
  new-parens: error
  no-array-constructor: error
  no-caller: error
  no-constant-condition: [error, checkLoops: false]
  no-dupe-class-members: error
  no-eval: error
  no-extend-native: error
  no-extra-bind: error
  no-floating-decimal: error
  no-implied-eval: error
  no-iterator: error
  no-loss-of-precision: error
  no-mixed-operators:
    - error
    - groups:
        - ["&", "|", "^", "~", "<<", ">>", ">>>"]
        - ["==", "!=", "===", "!==", ">", ">=", "<", "<=", "in", "instanceof"]
  no-multi-spaces: error
  no-multi-str: error
  no-multiple-empty-lines:
    - error
    - max: 1
      maxEOF: 0
  no-new: error
  no-new-func: error
  no-new-object: error
  no-new-wrappers: error
  no-octal-escape: error
  no-proto: error
  no-return-assign: [error, except-parens]
  no-self-assign: [error, props: true]
  no-self-compare: error
  no-sequences: error
  no-tabs: error
  no-template-curly-in-string: error
  no-throw-literal: error
  no-trailing-spaces: error
  no-undef-init: error
  no-unexpected-multiline: error
  no-unmodified-loop-condition: error
  no-unneeded-ternary: [error, defaultAssignment: false]
  no-unreachable-loop: error
  no-unused-expressions: error
  no-unused-vars:
    - error
    - args: all
      argsIgnorePattern: '^_'
      caughtErrors: all
      caughtErrorsIgnorePattern: '^_'
      destructuredArrayIgnorePattern: '^_'
      varsIgnorePattern: '^_'
  no-use-before-define: error
  no-useless-call: error
  no-useless-computed-key: error
  no-useless-constructor: error
  no-useless-rename: error
  no-useless-return: error
  no-var: error
  no-void: off
  no-whitespace-before-property: error
  object-curly-spacing: [error, always]
  object-property-newline: [error, allowAllPropertiesOnSameLine: true]
  object-shorthand: [error, properties]
  one-var: [error, initialized: never]
  padded-blocks: [error, never]
  prefer-const: error
  prefer-promise-reject-errors: error
  prefer-regex-literals: error
  quote-props: [error, as-needed]
  rest-spread-spacing: error
  semi-spacing: error
  sort-imports:
    - error
    - ignoreDeclarationSort: true # -> import/order
  space-before-blocks: error
  space-in-parens: error
  space-infix-ops: error
  space-unary-ops: error
  spaced-comment:
    - error
    - always
    - block:
        balanced: true
        exceptions: ['*']
        markers: ['*package', '!', ',', ':', '::', flow-include]
      line:
        markers: ['*package', '!', '/', ',', '=']
  symbol-description: error
  template-curly-spacing: error
  template-tag-spacing: error
  unicode-bom: error
  use-isnan: [error, enforceForIndexOf: true]
  yield-star-spacing: error
  yoda:
    - error
    - never
    - onlyEquality: true
  import/first: error
  import/no-absolute-path: error
  # import/no-duplicates:
  import/no-named-as-default: off
  import/no-unresolved: off
  import/no-webpack-loader-syntax: error
  import/order:
    - error
    - alphabetize:
        order: asc
  jsx-a11y/anchor-is-valid:
    - error
    - components: [Link]
      specialLink: [hrefLeft, hrefRight]
      aspects: [invalidHref, preferButton]
  node/no-deprecated-api: error
  node/no-exports-assign: error
  node/no-new-require: error
  node/no-path-concat: error
  node/process-exit-as-throw: error
  react/display-name: error
  react/jsx-boolean-value: [error, never]
  react/jsx-closing-bracket-location: [error, line-aligned]
  react/jsx-closing-tag-location: error
  react/jsx-curly-spacing:
    - error
    - allowMultiline: true
      children: true
  react/jsx-first-prop-new-line:
    - error
    - multiline-multiprop
  react/jsx-key: error
  react/jsx-max-props-per-line:
    - error
    - maximum: 1
      when: multiline
  react/jsx-no-bind:
    - error
    - ignoreDOMComponents: true
      ignoreRefs: true
  react/jsx-no-comment-textnodes: error
  react/jsx-no-duplicate-props: error
  react/jsx-no-target-blank: error
  react/jsx-no-undef: error
  react/jsx-pascal-case: error
  react/jsx-sort-props: error
  react/jsx-uses-react: error
  react/jsx-uses-vars: error
  react/no-array-index-key: error
  react/no-children-prop: error
  react/no-danger-with-children: error
  react/no-deprecated: error
  react/no-did-update-set-state: error
  react/no-direct-mutation-state: error
  react/no-find-dom-node: error
  react/no-is-mounted: error
  react/no-render-return-value: error
  react/no-string-refs: error
  react/no-unescaped-entities:
    - error
    - forbid: ['>', '}']
  react/no-unknown-property: error
  react/no-unsafe: off
  react/no-unused-prop-types: error
  react/react-in-jsx-scope: error
  react/require-default-props: off
  react/require-render-return: error
  react/self-closing-comp: error
  react-hooks/exhaustive-deps: error
  react-hooks/rules-of-hooks: error

overrides:
  - files: ['*.ts', '*.tsx']
    parser: '@typescript-eslint/parser'
    parserOptions:
      project: [./tsconfig.json]
    rules:
      camelcase: off
      default-param-last: off
      dot-notation: off
      new-cap: off
      no-array-constructor: off
      no-dupe-class-members: off
      no-extra-parens: off
      no-loss-of-precision: off
      no-redeclare: off
      no-throw-literal: off
      no-undef: off
      no-unused-expressions: off
      no-unused-vars: off
      no-use-before-define: off
      no-useless-constructor: off
      prefer-promise-reject-errors: off
      import/named: off
      react/prop-types: off
      '@typescript-eslint/array-type': [error, default: array-simple]
      '@typescript-eslint/await-thenable': error
      '@typescript-eslint/consistent-type-assertions':
        - error
        - assertionStyle: as
          objectLiteralTypeAssertions: never
      '@typescript-eslint/consistent-type-definitions': error
      '@typescript-eslint/default-param-last': error
      '@typescript-eslint/dot-notation': [error, allowKeywords: true]
      '@typescript-eslint/explicit-function-return-type': [error, allowExpressions: true]
      '@typescript-eslint/method-signature-style': error
      '@typescript-eslint/naming-convention':
        - error
        - format:
            - camelCase
            - PascalCase
            - UPPER_CASE
          leadingUnderscore: allow
          selector: variableLike
          trailingUnderscore: allow
      '@typescript-eslint/no-base-to-string': error
      '@typescript-eslint/no-dupe-class-members': error
      '@typescript-eslint/no-dynamic-delete': error
      '@typescript-eslint/no-extraneous-class': [error, allowWithDecorator: true]
      '@typescript-eslint/no-floating-promises': error
      '@typescript-eslint/no-for-in-array': error
      '@typescript-eslint/no-implied-eval': error
      '@typescript-eslint/no-invalid-void-type': error
      '@typescript-eslint/no-non-null-assertion': warn
      '@typescript-eslint/no-redeclare': off
      '@typescript-eslint/no-unnecessary-boolean-literal-compare': error
      '@typescript-eslint/no-unsafe-assignment': error
      '@typescript-eslint/no-unsafe-call': error
      '@typescript-eslint/no-unsafe-member-access': error
      '@typescript-eslint/no-unsafe-return': error
      '@typescript-eslint/no-unused-expressions': error
      '@typescript-eslint/no-unused-vars':
        - error
        - args: all
          argsIgnorePattern: '^_'
          caughtErrors: all
          caughtErrorsIgnorePattern: '^_'
          destructuredArrayIgnorePattern: '^_'
          varsIgnorePattern: '^_'
      '@typescript-eslint/no-use-before-define': error
      '@typescript-eslint/no-useless-constructor': error
      '@typescript-eslint/only-throw-error': error
      '@typescript-eslint/prefer-function-type': error
      '@typescript-eslint/prefer-includes': error
      '@typescript-eslint/prefer-nullish-coalescing': error
      '@typescript-eslint/prefer-optional-chain': error
      '@typescript-eslint/prefer-readonly': error
      '@typescript-eslint/prefer-reduce-type-parameter': error
      '@typescript-eslint/prefer-regexp-exec': error
      '@typescript-eslint/prefer-ts-expect-error': error
      '@typescript-eslint/promise-function-async': error
      '@typescript-eslint/require-array-sort-compare': error
      '@typescript-eslint/restrict-plus-operands':
        - error
        - allowAny: false
          allowBoolean: false
          allowNullish: false
          allowNumberAndString: false
          allowRegExp: false
      '@typescript-eslint/restrict-template-expressions': [error, allowNumber: true]
      '@typescript-eslint/return-await': [error, always]
      '@typescript-eslint/strict-boolean-expressions':
        - error
        - allowString: false
          allowNumber: false
      '@typescript-eslint/unbound-method': [error, ignoreStatic: true]
